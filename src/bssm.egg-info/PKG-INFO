Metadata-Version: 2.4
Name: bssm
Version: 1.0.0
Summary: Better AWS SSM CLI Tool
Home-page: https://github.com/juniper-31/bssm
Author: juniper-31
Author-email: juniper-31 <juniper@kakao.com>
License: MIT
Project-URL: Homepage, https://github.com/juniper-31/bssm
Project-URL: Repository, https://github.com/juniper-31/bssm
Project-URL: Issues, https://github.com/juniper-31/bssm/issues
Keywords: aws,ssm,cli,sso
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: boto3>=1.26.0
Requires-Dist: click>=8.0.0
Requires-Dist: rich>=12.0.0
Requires-Dist: pydantic>=1.10.0
Requires-Dist: keyring>=23.0.0
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# bssm - Better AWS SSM CLI Tool

test

🚀 AWS SSM을 더 쉽고 빠르게 사용할 수 있는 CLI 도구입니다.


## ✨ 주요 특징

- 🔐 **AWS SSO v2 지원** - 최신 SSO 인증 방식 지원
- 💳 **Access Key 지원** - 모든 AWS 인증 방식 호환
- 🎨 **터미널 UI** - Rich 라이브러리 기반 인터랙티브 인터페이스
- 📊 **상세한 인스턴스 정보** - 이름, 상태, 타입, IP 주소 한눈에 확인
- 🔧 **원클릭 설치** - Session Manager Plugin까지 자동 설치
- 💾 **즐겨찾기 & 히스토리** - 자주 사용하는 인스턴스 관리
- 🌍 **멀티 플랫폼** - Windows, macOS, Linux 지원

## 🚀 빠른 시작

### 설치

#### 자동 설치 (권장)
```bash
git clone https://github.com/juniper-31/bssm.git
cd bssm
./install.sh
```

#### Ubuntu 23.04+ 사용자
최신 Ubuntu에서는 pipx 사용을 권장합니다:
```bash
# pipx 설치 (없는 경우)
sudo apt install pipx

# bssm 설치
git clone https://github.com/juniper-31/bssm.git
cd bssm
pipx install .
pipx ensurepath

# PATH 설정 (필요한 경우)
export PATH="$HOME/.local/bin:$PATH"
echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/.bashrc
```

#### Windows 사용자
PowerShell 또는 명령 프롬프트에서:

**PowerShell (권장):**
```powershell
# 실행 정책 설정 (한 번만)
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser

# bssm 설치
git clone https://github.com/juniper-31/bssm.git
cd bssm
.\install.ps1
```

**명령 프롬프트 (CMD):**
```cmd
git clone https://github.com/juniper-31/bssm.git
cd bssm
install.bat
```

**수동 설치:**
```cmd
pip install --user .
# PATH에 %APPDATA%\Python\Scripts 추가 필요
```

### 사용법
```bash
# 인스턴스 연결 (기본 프로필)
bssm connect

# 특정 AWS 프로필 사용
bssm connect --profile my-profile

# 인스턴스 목록만 보기
bssm list --profile my-profile

# AWS 인증 테스트
bssm test-auth --profile my-profile
```

## 📋 사용 예시

### 1. 인스턴스 연결
```bash
$ bssm connect --profile gitlab-prod

╭─────────────────────────────────────────╮
│  AWS SSM 연결                           │
╰─────────────────────────────────────────╯

                    SSM 연결 가능한 인스턴스 (10개)
┏━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┓
┃ 번호 ┃ 이름                                    ┃ Instance ID         ┃
┡━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━┩
│ 1    │ GITLAB-PRD-BATCH-MANAGED-V1_32           │ i-0e2d83o102123e02 │
│ 2    │ GITLAB-PRD-WORKLOAD-MANAGED-V1_32        │ i-013919dybc232756 │
└──────┴─────────────────────────────────────────┴─────────────────────┘

연결할 인스턴스 번호를 선택하세요 (1): 1
✅ 선택된 인스턴스: GITLAB-PRD-BATCH-MANAGED-V1_32 (i-0e2d83o102123e02)
🚀 i-0e2d83o102123e02 연결 중...

Starting session with SessionId: user@domain.com-abc123
sh-5.2$ whoami
ssm-user
sh-5.2$
```

<img width="1885" height="913" alt="image" src="https://github.com/user-attachments/assets/5943eb0c-7244-4f52-8846-225caab0de16" />

### 2. 즐겨찾기 관리
```bash
# 즐겨찾기 추가
bssm add-favorite i-0e2d83o102123e02

# 즐겨찾기 목록 보기
bssm favorites
```

## 🛠️ 설치 요구사항

- **Python 3.8 이상+**
- **AWS CLI v2** (SSO 지원)
- **Session Manager Plugin** (자동 설치됨)

## 🔐 지원하는 인증 방식

- ✅ **AWS SSO v2** (권장)
- ✅ **IAM Access Key + Secret Key**
- ✅ **IAM Role** (EC2 Instance Profile)
- ✅ **환경 변수**
- ✅ **AWS CLI 기본 프로필**


### 설정 파일 위치
- 설정 파일: `~/.bssm/config.json`
- 즐겨찾기 및 히스토리 저장


## 🚀 성능

- **실행 속도**: ~0.7초
- **메모리 사용량**: 최적화된 Python 패키지
- **AWS API 호출**: 효율적인 병렬 처리

## 🐛 문제 해결

### SSO 토큰 만료
```bash
# SSO 재로그인
aws sso login --profile your-profile

# 인증 테스트
bssm test-auth --profile your-profile
```

### Session Manager Plugin 오류
```bash
# macOS
brew install --cask session-manager-plugin

# Linux (Ubuntu/Debian)
curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
sudo dpkg -i session-manager-plugin.deb
```

### 가상환경 오류
```bash
# 가상환경 비활성화 후 재설치
deactivate
./install.sh
```

## 🗑️ 제거 방법

### 간단한 제거
```bash
pip3 uninstall bssm
```

### 완전 제거 (설정 파일 포함)
```bash
pip3 uninstall bssm
rm -rf ~/.bssm
```

### 재설치
```bash
# 제거
pip3 uninstall bssm

# 재설치
cd /path/to/bssm
./install.sh
```

## 🤝 기여하기

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add some amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

## 📄 라이선스

MIT License - 자세한 내용은 [LICENSE](LICENSE) 파일을 참조하세요.

---

**⭐ 이 프로젝트가 유용하다면 Star를 눌러주세요!**
